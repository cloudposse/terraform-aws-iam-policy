#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-iam-policy

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2021"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-iam-policy

# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse/terraform-aws-iam-policy.svg?style=for-the-badge
    url: https://github.com/cloudposse/terraform-aws-iam-policy/releases/latest
  - name: Last Updated
    image: https://img.shields.io/github/last-commit/cloudposse/terraform-aws-iam-policy.svg?style=for-the-badge
    url: https://github.com/cloudposse/terraform-aws-iam-policy/commits
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "terraform-null-label"
    description: "Terraform module designed to generate consistent names and tags for resources. Use terraform-null-label to implement a strict naming convention."
    url: "https://github.com/cloudposse/terraform-null-label"

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: "Terraform `aws_iam_policy_document` data source"
    description: "The Terraform data source that this module wraps."
    url: "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"

# Short description of this project
description: |-
  This `terraform-aws-iam-policy` module is a wrapper around the Terraform [aws_iam_policy_document](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document)
  data source, enhancing it to provide multiple ways to create an AWS IAM Policy document (as a JSON string).
  It is primarily intended to simplify creating a policy in Terraform from external inputs. In particular,
  if you want to specify a policy in a `tfvars` file as a Terraform object, or in YAML as part of an
  [Atmos](https://atmos.tools/) stack (which is them turned into a Terraform object input), this module provides
  an object type declaration to use for the input and then it can make the translation to JSON for you.
  If you can supply the policy as JSON to begin with, or conveniently use the `aws_iam_policy_document`
  Terraform data source directly, then this module is not helpful in your case.

  > [!NOTE]
  > AWS's IAM policy document syntax allows for replacement of policy variables within a statement
  > using ${...}-style notation, which conflicts with Terraform's interpolation syntax. In order to use AWS
  > policy variables with this module, use &{...} notation for interpolations that should be processed
  > by AWS rather than by Terraform. Nevertheless, any ${...}-style notations that appear in strings passed into
  > this module (somehow escaping Terraform interpolation earlier) will be passed through to the policy document unchanged.

# Introduction to the project
#introduction: |-
#  This is an introduction.

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  For a complete example, see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest)
  (which tests and deploys the example on AWS), see [test](test).

  ```hcl
  module "iam_policy" {
    source  = "cloudposse/iam-policy/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"

    iam_policy = [{
      version = "2012-10-17"
      policy_id = "example"
      statements = [
        {
          sid       = "ListMyBucket"
          effect    = "Allow"
          actions   = ["s3:ListBucket"]
          resources = ["arn:aws:s3:::test"]
          conditions = [
            {
              test     = "StringLike"
              variable = "cloudwatch:namespace"
              values   = ["x-*"]
            },
          ]
        },
        {
          sid       = "WriteMyBucket"
          effect    = "Allow"
          actions   = ["s3:PutObject", "s3:GetObject", "s3:DeleteObject"]
          resources = ["arn:aws:s3:::test/*"]
          conditions = [
            {
              test     = "StringLike"
              variable = "cloudwatch:namespace"
              values   = ["x-*"]
            },
          ]
        }
      ]
    }]

  data "aws_iam_policy_document" "assume_role" {
    statement {
      actions = ["sts:AssumeRole"]

      principals {
        type        = "Service"
        identifiers = ["ec2.amazonaws.com"]
      }
    }
  }

  resource "aws_iam_role" "example" {
    name               = "hello_role"
    assume_role_policy = data.aws_iam_policy_document.assume_role.json

    inline_policy {
      name = "test_policy"

      policy = module.iam_policy.json
    }
  }
  ```

# Example usage
examples: |-
  Here is an example of using this module:
  - [`examples/complete`](https://github.com/cloudposse/terraform-aws-iam-policy/) - overly basic example of using this module
  - [terraform-aws-helm-release](https://github.com/cloudposse/terraform-aws-helm-release) - realistic use of this module

# How to get started quickly
#quickstart: |-
#  Here's how to get started...

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors: []
